@using DodoPlanner.Services
@using DodoPlanner.Models
@using Microsoft.AspNetCore.Components.Web
@using DodoPlanner.Pages
@inject JsonFileTdListService tdlistservice
<center>
<p>Edit Lists: <input type="checkbox" @onclick="(e => editMode = !editMode)" /></p>

<table class="table table-borderless" style="width: 50%; text-align: center;">
    <tbody>
    @foreach (var tdlist in tdlistservice.GetTdLists())
    {
        <tr><td>
            @if (editMode)
            {
                <div class="input-group">
                    <input class="form-control" value="@tdlist.Title" @onchange="(e => {
                                                               tdlist.Title = e.Value.ToString();
                                                               tdlistservice.writeJson(tdlist);
                                                           })" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-danger btn-sm" @onclick="(e => RemoveList(tdlist.ListID))"> ╳ </button>
                    </div>
                </div>
            }
            else
            {
                <a class="btn btn-outline-secondary btn-sm" style="width: 50%;" href="/ToDoList/@tdlist.ListID.ToString()">@tdlist.Title</a>
            }
        </td></tr>
    }
    </tbody>
</table>
<div class="input-group" style="width: 50%;">
    <input class="form-control" @bind="newListTitle" />
    <div class="input-group-append">
        <button class="btn btn-outline-success" @onclick="(e => AddList())">Add New List </button>
    </div>
</div>
</center>





@code {
    string newListTitle { get; set; }

    bool editMode { get; set; }

    void AddList()
    {
        tdlistservice.AddTdList(newListTitle);
        newListTitle = string.Empty;
    }

    void RemoveList(Guid ListId)
    {
        tdlistservice.RemoveTdList(ListId);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        editMode = false;
    }
}
