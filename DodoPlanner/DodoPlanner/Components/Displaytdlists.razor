@using DodoPlanner.Services
@using DodoPlanner.Models
@using Microsoft.AspNetCore.Components.Web
@using DodoPlanner.Pages
@using System.Web 
@using Microsoft.JSInterop 
@inject IJSRuntime JSRuntime
@inject SqlTdListService tdlistservice
<center>
    <div class="text-center">
        <h1 class="display-4">@cookie's Lists</h1>
    </div>
<p>Edit Mode: <input type="checkbox" @onclick="(e => editMode = !editMode)" /></p>
 
 

@foreach (var cat in tdlistservice.get_user_categories(cookie))
{
    if (!newListTitles.ContainsKey(cat.Id))
    {
        newListTitles[cat.Id] = string.Empty;
    }
    if (editMode)
    {
<div class="input-group" style="width: 50%;">
    <input class="form-control" style="font-weight: bold; color:@cat.Color;" value="@cat.Name" @onchange="(e => { cat.Name = e.Value.ToString(); tdlistservice.editCategory(cat); })" />
    <div class="input-group-append">
        <input class="form-control" type="color" value="@cat.Color" @onchange="(e => { cat.Color = e.Value.ToString(); tdlistservice.editCategory(cat);})" />
    </div>
    <div class="input-group-append">
        <input class="form-control" @bind="shareusername"/>
    </div>
    <div class="input-group-append">
        <button class="btn btn-outline-secondary btn-sm" @onclick="(e => share(cat.Id))"> Share Category</button>
    </div>
    <div class="input-group-append">
        <button class="btn btn-outline-danger btn-sm" @onclick="(e => RemoveCategory(cat.Id))"> ╳ </button>
    </div>
</div>
    }
    else
    {
        <h2 style="color: @cat.Color; text-align: center">@cat.Name</h2>
    }
    <table class="table table-borderless" style="width: 50%; text-align: center;">
        <tbody>
        @foreach (var tdlist in tdlistservice.GetTdLists().Where(x => x.CategoryId == cat.Id))
        {
            <tr><td>
                @if (editMode)
                {
                    <div class="input-group">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown">
                                Select Category
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (Category category in tdlistservice.get_user_categories(cookie))
                                {
                                    <li><a class="btn btn-outliine-secondary" style="text-align: center; color: @category.Color;" href="#" value="@category.Id" @onclick="(e => { tdlist.CategoryId = category.Id; tdlistservice.editList(tdlist); })">@category.Name</a></li>
                                }
                            </ul>
                        </div>
                        <input class="form-control" value="@tdlist.Title" @onchange="(e =>
                                                                                     {
                                                                                         tdlist.Title = e.Value.ToString();
                                                                                         tdlistservice.editList(tdlist);
                                                                                     })" />
                        <div class="input-group-append">
                            <button class="btn btn-outline-danger btn-sm" @onclick="(e => RemoveList(tdlist.ListID))"> ╳ </button>
                        </div>
                    </div>
                }
                else
                {
                    <a class="btn btn-outline-secondary btn-sm" style="width: 50%;" href="/ToDoList/@tdlist.ListID.ToString()">@tdlist.Title</a>
                }
            </td></tr>
        }
        </tbody>
    </table>
    <div class="input-group" style="width: 30%;">
        <input class="form-control" value="@newListTitles[cat.Id]" @onchange="(e => newListTitles[cat.Id] = e.Value.ToString())"/>
        <div class="input-group-append">
            <button class="btn btn-outline-success" @onclick="(e => AddList(cat.Id))">Add New List </button>
        </div>
    </div>
    <br />
    if (editMode)
    {
        <br />
    }
}
<br /><br />
<div class="input-group" style="width: 50%;">
    <input class="form-control" @bind="newCategoryTitle" />
    <input class="form-control" type="color" @bind="newCategoryColor" />
    <div class="input-group-append">
        <button class="btn btn-outline-success" @onclick="(e => AddCategory())">Add New Category </button>
    </div>
</div>
</center>





@code {
    string newCategoryColor { get; set; }

    string cookie { get; set; }
    string shareusername { get; set; }


    Dictionary<Guid, string> newListTitles { get; set; }
    string newCategoryTitle { get; set; }

    bool editMode { get; set; }

    void share(Guid catId)
    {
        tdlistservice.add_view_permissions(shareusername, catId);
        shareusername = string.Empty;
    }

    void AddList(Guid catid)
    {
        tdlistservice.AddTdList(newListTitles[catid], catid);
        newListTitles[catid] = string.Empty;
    }

    void AddCategory()
    {
        tdlistservice.AddCategory(newCategoryTitle, newCategoryColor, cookie);
        newCategoryTitle = string.Empty;
    }

    void RemoveCategory(Guid catid)
    {
        tdlistservice.RemoveCategory(catid);
    }

    void RemoveList(Guid ListId)
    {
        tdlistservice.RemoveTdList(ListId);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        editMode = false;
        newListTitles = new Dictionary<Guid, string>();
        cookie = "";
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var test = await JSRuntime.InvokeAsync<string>("getcookie", "username");
            cookie = test;
            StateHasChanged();
        }

    }
}
